{
  "paragraphs": [
    {
      "text": "%pyspark\nimport matplotlib",
      "user": "admin",
      "dateUpdated": "2020-09-01 12:09:25.499",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1597773541896_1975654196",
      "id": "20200818-175901_1420786028",
      "dateCreated": "2020-08-18 17:59:01.896",
      "dateStarted": "2020-09-01 12:09:25.516",
      "dateFinished": "2020-09-01 12:09:26.319",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n",
      "user": "admin",
      "dateUpdated": "2020-08-28 10:51:37.884",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1598611897883_720084591",
      "id": "20200828-105137_1260849675",
      "dateCreated": "2020-08-28 10:51:37.883",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nimport sys, os\nimport hdbscan\nprint(sys.executable)\n#import healpy\n#import matplotlib",
      "user": "admin",
      "dateUpdated": "2020-09-01 14:40:35.274",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1597775022209_-33776461",
      "id": "20200818-182342_678223456",
      "dateCreated": "2020-08-18 18:23:42.209",
      "dateStarted": "2020-09-01 14:40:35.299",
      "dateFinished": "2020-09-01 14:40:40.056",
      "status": "ABORT",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nimport sys, os\nprint(sys.executable)\n#import healpy\n#import matplotlib",
      "user": "admin",
      "dateUpdated": "2020-08-29 09:31:26.340",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "/usr/bin/python3.7\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1598379862974_238749161",
      "id": "20200825-182422_216199392",
      "dateCreated": "2020-08-25 18:24:22.974",
      "dateStarted": "2020-08-29 09:31:26.363",
      "dateFinished": "2020-08-29 09:31:26.438",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport healpy as hp\nhp.mollview(np.arange(12))\nplt.show()",
      "user": "admin",
      "dateUpdated": "2020-08-29 09:31:31.592",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "/usr/local/lib64/python3.7/site-packages/healpy/projaxes.py:920: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap \u003d copy.copy(mpl.cm.get_cmap(\"viridis\"))\n  newcm.set_over(newcm(1.0))\n/usr/local/lib64/python3.7/site-packages/healpy/projaxes.py:921: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap \u003d copy.copy(mpl.cm.get_cmap(\"viridis\"))\n  newcm.set_under(bgcolor)\n/usr/local/lib64/python3.7/site-packages/healpy/projaxes.py:922: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap \u003d copy.copy(mpl.cm.get_cmap(\"viridis\"))\n  newcm.set_bad(badcolor)\n/usr/local/lib64/python3.7/site-packages/healpy/projaxes.py:211: MatplotlibDeprecationWarning: Passing parameters norm and vmin/vmax simultaneously is deprecated since 3.3 and will become an error two minor releases later. Please pass vmin/vmax directly to the norm when creating it.\n  **kwds\n\u003cFigure size 612x388.8 with 2 Axes\u003e\n"
          },
          {
            "type": "IMG",
            "data": "\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1597775057750_249430371",
      "id": "20200818-182417_1484468418",
      "dateCreated": "2020-08-18 18:24:17.750",
      "dateStarted": "2020-08-29 09:31:31.609",
      "dateFinished": "2020-08-29 09:31:43.522",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%python\nimport sys\nsys.version_info",
      "user": "admin",
      "dateUpdated": "2020-08-19 16:44:32.357",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "sys.version_info(major\u003d3, minor\u003d7, micro\u003d6, releaselevel\u003d\u0027final\u0027, serial\u003d0)"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1597778206722_990377131",
      "id": "20200818-191646_1861303917",
      "dateCreated": "2020-08-18 19:16:46.722",
      "dateStarted": "2020-08-19 16:44:32.379",
      "dateFinished": "2020-08-19 16:44:36.534",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nimport sys\nsys.version_info\n",
      "user": "admin",
      "dateUpdated": "2020-08-19 16:44:51.377",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "sys.version_info(major\u003d2, minor\u003d7, micro\u003d17, releaselevel\u003d\u0027final\u0027, serial\u003d0)"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1597855472357_322379730",
      "id": "20200819-164432_1269032263",
      "dateCreated": "2020-08-19 16:44:32.357",
      "dateStarted": "2020-08-19 16:44:51.398",
      "dateFinished": "2020-08-19 16:45:25.667",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n",
      "user": "admin",
      "dateUpdated": "2020-08-19 16:44:51.378",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1597855491377_-938550992",
      "id": "20200819-164451_1024163881",
      "dateCreated": "2020-08-19 16:44:51.377",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "~Trash/experiments/stv/randomTests",
  "id": "2FGP4V8EJ",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}