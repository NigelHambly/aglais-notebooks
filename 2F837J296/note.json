{
  "paragraphs": [
    {
      "text": "%spark.pyspark\n\n\n# define the data frame source on the given column selection/predicates:\ndf \u003d sqlContext.read.parquet(\n    \"/hadoop/gaia/parquet/gdr2/gaia_source/*.parquet\"\n    ).select(\n    [\"designation\",\"source_id\",\"ra\",\"ra_error\",\"dec\",\"dec_error\",\"parallax\",\"parallax_error\",\"parallax_over_error\",\"pmra\",\"pmra_error\",\"pmdec\",\"pmdec_error\",\"l\",\"b\"]\n    ).where(\n    \"abs(b) \u003c 30.0 AND parallax \u003e 1.0 and parallax_over_error \u003e 10.0 AND phot_g_mean_flux_over_error \u003e 36.19 AND astrometric_sigma5d_max \u003c 0.3 AND visibility_periods_used \u003e 8 AND (astrometric_excess_noise \u003c 1 OR (astrometric_excess_noise \u003e 1 AND astrometric_excess_noise_sig \u003c 2))\"\n    )\n\n# sanity check\ndf.show()\nprint (\"Data frame rows: \",df.count())\n",
      "user": "admin",
      "dateUpdated": "2020-04-30 12:04:34.656",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1588248236955_1041894582",
      "id": "20200430-120356_1759239023",
      "dateCreated": "2020-04-30 12:03:56.955",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n\nimport pandas as pd\nimport numpy as np\nspark.conf.set(\"spark.sql.execution.arrow.enabled\", \"true\")\n\n\npandas_df \u003d df.select(\"*\").limit(1000).toPandas()\nprint(type(pandas_df))\npandas_df.head()",
      "user": "admin",
      "dateUpdated": "2020-04-30 12:04:43.547",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1588248260754_-574982785",
      "id": "20200430-120420_1382591179",
      "dateCreated": "2020-04-30 12:04:20.754",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n\nNUM_SAMPLES \u003d 1000000000\n\ndef inside(p):\n    x, y \u003d random.random(), random.random()\n    return x*x + y*y \u003c 1\n\ncount \u003d sc.parallelize(xrange(0, NUM_SAMPLES)) \\\n             .filter(inside).count()\nprint \"Pi is roughly %f\" % (4.0 * count / NUM_SAMPLES)\n\n",
      "user": "admin",
      "dateUpdated": "2020-04-30 12:04:49.999",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1588248265219_-1121163985",
      "id": "20200430-120425_1459560607",
      "dateCreated": "2020-04-30 12:04:25.219",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n\nfrom random import choice\nfrom string import digits, ascii_lowercase\n\nchars \u003d digits + ascii_lowercase\nseq \u003d [\"\".join([choice(chars) for i in range(3)]) for j in range(50000000)]\ndata \u003d sc.parallelize(seq)\ncounts \u003d data.map(lambda word: (word, 1)).reduceByKey(lambda a, b: a + b).top(5)\ndict(counts)",
      "user": "admin",
      "dateUpdated": "2020-04-30 12:05:00.575",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1588248263402_567477185",
      "id": "20200430-120423_250737383",
      "dateCreated": "2020-04-30 12:04:23.402",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "~Trash/benchmarks",
  "id": "2F837J296",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}