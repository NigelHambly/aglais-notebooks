{
  "paragraphs": [
    {
      "text": "%spark.pyspark\nimport random \nNUM_SAMPLES \u003d 2000000000\n\ndef inside(p):\n    x, y \u003d random.random(), random.random()\n    return x*x + y*y \u003c 1\n\ncount \u003d sc.parallelize(range(0, NUM_SAMPLES)) \\\n             .filter(inside).count()\nprint (\"Pi is roughly %f\" % (4.0 * count / NUM_SAMPLES))",
      "user": "gaiauser",
      "dateUpdated": "2020-10-19 14:01:31.876",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "lineNumbers": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Pi is roughly 3.141592\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1590677849327_-555978077",
      "id": "20200528-145729_998925121",
      "dateCreated": "2020-05-28 14:57:29.327",
      "dateStarted": "2020-09-24 17:26:01.129",
      "dateFinished": "2020-09-24 17:26:52.304",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n\nNUM_SAMPLES \u003d 2000000000\n\ndef inside(p):\n    x, y \u003d random.random(), random.random()\n    return x*x + y*y \u003c 1\n\ncount \u003d sc.parallelize(xrange(0, NUM_SAMPLES)) \\\n             .filter(inside).count()\nprint \"Pi is roughly %f\" % (4.0 * count / NUM_SAMPLES)",
      "user": "gaiauser",
      "dateUpdated": "2020-07-29 12:12:11.379",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Pi is roughly 3.141557\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1590681078484_-397179618",
      "id": "20200528-155118_1560682759",
      "dateCreated": "2020-05-28 15:51:18.484",
      "dateStarted": "2020-07-29 13:42:50.812",
      "dateFinished": "2020-07-29 13:43:46.760",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\ninput_master \u003d z.input(\"value\", \"2\") # 2 is default value\nz.put(\"value_item\", input_master) \n",
      "user": "admin",
      "dateUpdated": "2020-08-07 19:42:19.810",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {
          "value": "2",
          "value_item": 6.0
        },
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1590677852884_521590751",
      "id": "20200528-145732_488840412",
      "dateCreated": "2020-05-28 14:57:32.884",
      "dateStarted": "2020-08-07 19:42:19.839",
      "dateFinished": "2020-08-07 19:42:19.845",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nvalue \u003d z.get(\"value_item\") \nprint(value)",
      "user": "gaiauser",
      "dateUpdated": "2020-07-29 13:37:43.070",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {
          "value_item": "6"
        },
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "2\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1596029656833_-1637905373",
      "id": "20200729-133416_1137449935",
      "dateCreated": "2020-07-29 13:34:16.833",
      "dateStarted": "2020-07-29 13:50:33.998",
      "dateFinished": "2020-07-29 13:50:34.011",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nvalue \u003d z.get(\"value_item\") \nvalue2 \u003d z.get(\"params\") \n\nprint(value, value2)",
      "user": "admin",
      "dateUpdated": "2020-07-29 13:46:13.565",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "(u\u00272\u0027, None)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1590678882942_354640330",
      "id": "20200528-151442_2112920044",
      "dateCreated": "2020-05-28 15:14:42.942",
      "dateStarted": "2020-07-29 13:46:13.576",
      "dateFinished": "2020-07-29 13:46:13.585",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "~Trash/experiments/stv/pi",
  "id": "2F8ZEBZDJ",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}